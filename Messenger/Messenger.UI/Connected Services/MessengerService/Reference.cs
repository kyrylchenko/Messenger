//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Messenger.UI.MessengerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessengerService.IMessengerService", CallbackContract=typeof(Messenger.UI.MessengerService.IMessengerServiceCallback))]
    public interface IMessengerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/Connect", ReplyAction="http://tempuri.org/IMessengerService/ConnectResponse")]
        Messenger.BLL.DTO.UserDTO Connect(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/Connect", ReplyAction="http://tempuri.org/IMessengerService/ConnectResponse")]
        System.Threading.Tasks.Task<Messenger.BLL.DTO.UserDTO> ConnectAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMessengerService/SendMessage")]
        void SendMessage(Messenger.BLL.DTO.MessageDTO message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMessengerService/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(Messenger.BLL.DTO.MessageDTO message);
        
        // CODEGEN: Generating message contract since the wrapper name (UploadFileRequest) of message UploadFileRequest does not match the default value (UploadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/UploadFile", ReplyAction="http://tempuri.org/IMessengerService/UploadFileResponse")]
        Messenger.UI.MessengerService.UploadFileInfo UploadFile(Messenger.UI.MessengerService.UploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/UploadFile", ReplyAction="http://tempuri.org/IMessengerService/UploadFileResponse")]
        System.Threading.Tasks.Task<Messenger.UI.MessengerService.UploadFileInfo> UploadFileAsync(Messenger.UI.MessengerService.UploadFileRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (DownloadFileRequest) of message DownloadFileRequest does not match the default value (DownloadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/DownloadFile", ReplyAction="http://tempuri.org/IMessengerService/DownloadFileResponse")]
        Messenger.UI.MessengerService.DownloadFileInfo DownloadFile(Messenger.UI.MessengerService.DownloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/DownloadFile", ReplyAction="http://tempuri.org/IMessengerService/DownloadFileResponse")]
        System.Threading.Tasks.Task<Messenger.UI.MessengerService.DownloadFileInfo> DownloadFileAsync(Messenger.UI.MessengerService.DownloadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/Disconnect", ReplyAction="http://tempuri.org/IMessengerService/DisconnectResponse")]
        void Disconnect(Messenger.BLL.DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/Disconnect", ReplyAction="http://tempuri.org/IMessengerService/DisconnectResponse")]
        System.Threading.Tasks.Task DisconnectAsync(Messenger.BLL.DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetChats", ReplyAction="http://tempuri.org/IMessengerService/GetChatsResponse")]
        System.Collections.Generic.List<Messenger.BLL.DTO.ChatDTO> GetChats(Messenger.BLL.DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetChats", ReplyAction="http://tempuri.org/IMessengerService/GetChatsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Messenger.BLL.DTO.ChatDTO>> GetChatsAsync(Messenger.BLL.DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetMessages", ReplyAction="http://tempuri.org/IMessengerService/GetMessagesResponse")]
        System.Collections.Generic.List<Messenger.BLL.DTO.MessageDTO> GetMessages(Messenger.BLL.DTO.ChatDTO chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetMessages", ReplyAction="http://tempuri.org/IMessengerService/GetMessagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Messenger.BLL.DTO.MessageDTO>> GetMessagesAsync(Messenger.BLL.DTO.ChatDTO chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetChatUsers", ReplyAction="http://tempuri.org/IMessengerService/GetChatUsersResponse")]
        System.Collections.Generic.List<Messenger.BLL.DTO.ChatUserDTO> GetChatUsers(Messenger.BLL.DTO.ChatDTO chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetChatUsers", ReplyAction="http://tempuri.org/IMessengerService/GetChatUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Messenger.BLL.DTO.ChatUserDTO>> GetChatUsersAsync(Messenger.BLL.DTO.ChatDTO chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/UpdateMessage", ReplyAction="http://tempuri.org/IMessengerService/UpdateMessageResponse")]
        void UpdateMessage(Messenger.BLL.DTO.MessageDTO msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/UpdateMessage", ReplyAction="http://tempuri.org/IMessengerService/UpdateMessageResponse")]
        System.Threading.Tasks.Task UpdateMessageAsync(Messenger.BLL.DTO.MessageDTO msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetUser", ReplyAction="http://tempuri.org/IMessengerService/GetUserResponse")]
        Messenger.BLL.DTO.UserDTO GetUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetUser", ReplyAction="http://tempuri.org/IMessengerService/GetUserResponse")]
        System.Threading.Tasks.Task<Messenger.BLL.DTO.UserDTO> GetUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/Registration", ReplyAction="http://tempuri.org/IMessengerService/RegistrationResponse")]
        System.Nullable<bool> Registration(Messenger.BLL.DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/Registration", ReplyAction="http://tempuri.org/IMessengerService/RegistrationResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> RegistrationAsync(Messenger.BLL.DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/AddContact", ReplyAction="http://tempuri.org/IMessengerService/AddContactResponse")]
        Messenger.BLL.DTO.UserDTO AddContact(string contactEmail, Messenger.BLL.DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/AddContact", ReplyAction="http://tempuri.org/IMessengerService/AddContactResponse")]
        System.Threading.Tasks.Task<Messenger.BLL.DTO.UserDTO> AddContactAsync(string contactEmail, Messenger.BLL.DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/CreateChat", ReplyAction="http://tempuri.org/IMessengerService/CreateChatResponse")]
        Messenger.BLL.DTO.ChatDTO CreateChat(Messenger.BLL.DTO.ChatDTO chat, System.Collections.Generic.List<Messenger.BLL.DTO.ChatUserDTO> chatUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/CreateChat", ReplyAction="http://tempuri.org/IMessengerService/CreateChatResponse")]
        System.Threading.Tasks.Task<Messenger.BLL.DTO.ChatDTO> CreateChatAsync(Messenger.BLL.DTO.ChatDTO chat, System.Collections.Generic.List<Messenger.BLL.DTO.ChatUserDTO> chatUsers);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessengerServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMessengerService/CallBackMsg")]
        void CallBackMsg(Messenger.BLL.DTO.MessageDTO msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMessengerService/CallBackChatAdded")]
        void CallBackChatAdded(Messenger.BLL.DTO.ChatDTO chat);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string filePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public UploadFileRequest() {
        }
        
        public UploadFileRequest(string filePath, System.IO.Stream FileByteStream) {
            this.filePath = filePath;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Messenger.BLL.DTO.FileDTO file;
        
        public UploadFileInfo() {
        }
        
        public UploadFileInfo(Messenger.BLL.DTO.FileDTO file) {
            this.file = file;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int fileId;
        
        public DownloadFileRequest() {
        }
        
        public DownloadFileRequest(int fileId) {
            this.fileId = fileId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int fileId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public DownloadFileInfo() {
        }
        
        public DownloadFileInfo(int fileId, string fileName, System.IO.Stream FileByteStream) {
            this.fileId = fileId;
            this.fileName = fileName;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessengerServiceChannel : Messenger.UI.MessengerService.IMessengerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessengerServiceClient : System.ServiceModel.DuplexClientBase<Messenger.UI.MessengerService.IMessengerService>, Messenger.UI.MessengerService.IMessengerService {
        
        public MessengerServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MessengerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MessengerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MessengerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MessengerServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Messenger.BLL.DTO.UserDTO Connect(string email, string password) {
            return base.Channel.Connect(email, password);
        }
        
        public System.Threading.Tasks.Task<Messenger.BLL.DTO.UserDTO> ConnectAsync(string email, string password) {
            return base.Channel.ConnectAsync(email, password);
        }
        
        public void SendMessage(Messenger.BLL.DTO.MessageDTO message) {
            base.Channel.SendMessage(message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(Messenger.BLL.DTO.MessageDTO message) {
            return base.Channel.SendMessageAsync(message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Messenger.UI.MessengerService.UploadFileInfo Messenger.UI.MessengerService.IMessengerService.UploadFile(Messenger.UI.MessengerService.UploadFileRequest request) {
            return base.Channel.UploadFile(request);
        }
        
        public Messenger.BLL.DTO.FileDTO UploadFile(string filePath, System.IO.Stream FileByteStream) {
            Messenger.UI.MessengerService.UploadFileRequest inValue = new Messenger.UI.MessengerService.UploadFileRequest();
            inValue.filePath = filePath;
            inValue.FileByteStream = FileByteStream;
            Messenger.UI.MessengerService.UploadFileInfo retVal = ((Messenger.UI.MessengerService.IMessengerService)(this)).UploadFile(inValue);
            return retVal.file;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Messenger.UI.MessengerService.UploadFileInfo> Messenger.UI.MessengerService.IMessengerService.UploadFileAsync(Messenger.UI.MessengerService.UploadFileRequest request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<Messenger.UI.MessengerService.UploadFileInfo> UploadFileAsync(string filePath, System.IO.Stream FileByteStream) {
            Messenger.UI.MessengerService.UploadFileRequest inValue = new Messenger.UI.MessengerService.UploadFileRequest();
            inValue.filePath = filePath;
            inValue.FileByteStream = FileByteStream;
            return ((Messenger.UI.MessengerService.IMessengerService)(this)).UploadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Messenger.UI.MessengerService.DownloadFileInfo Messenger.UI.MessengerService.IMessengerService.DownloadFile(Messenger.UI.MessengerService.DownloadFileRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public string DownloadFile(ref int fileId, out System.IO.Stream FileByteStream) {
            Messenger.UI.MessengerService.DownloadFileRequest inValue = new Messenger.UI.MessengerService.DownloadFileRequest();
            inValue.fileId = fileId;
            Messenger.UI.MessengerService.DownloadFileInfo retVal = ((Messenger.UI.MessengerService.IMessengerService)(this)).DownloadFile(inValue);
            fileId = retVal.fileId;
            FileByteStream = retVal.FileByteStream;
            return retVal.fileName;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Messenger.UI.MessengerService.DownloadFileInfo> Messenger.UI.MessengerService.IMessengerService.DownloadFileAsync(Messenger.UI.MessengerService.DownloadFileRequest request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<Messenger.UI.MessengerService.DownloadFileInfo> DownloadFileAsync(int fileId) {
            Messenger.UI.MessengerService.DownloadFileRequest inValue = new Messenger.UI.MessengerService.DownloadFileRequest();
            inValue.fileId = fileId;
            return ((Messenger.UI.MessengerService.IMessengerService)(this)).DownloadFileAsync(inValue);
        }
        
        public void Disconnect(Messenger.BLL.DTO.UserDTO user) {
            base.Channel.Disconnect(user);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(Messenger.BLL.DTO.UserDTO user) {
            return base.Channel.DisconnectAsync(user);
        }
        
        public System.Collections.Generic.List<Messenger.BLL.DTO.ChatDTO> GetChats(Messenger.BLL.DTO.UserDTO user) {
            return base.Channel.GetChats(user);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Messenger.BLL.DTO.ChatDTO>> GetChatsAsync(Messenger.BLL.DTO.UserDTO user) {
            return base.Channel.GetChatsAsync(user);
        }
        
        public System.Collections.Generic.List<Messenger.BLL.DTO.MessageDTO> GetMessages(Messenger.BLL.DTO.ChatDTO chat) {
            return base.Channel.GetMessages(chat);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Messenger.BLL.DTO.MessageDTO>> GetMessagesAsync(Messenger.BLL.DTO.ChatDTO chat) {
            return base.Channel.GetMessagesAsync(chat);
        }
        
        public System.Collections.Generic.List<Messenger.BLL.DTO.ChatUserDTO> GetChatUsers(Messenger.BLL.DTO.ChatDTO chat) {
            return base.Channel.GetChatUsers(chat);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Messenger.BLL.DTO.ChatUserDTO>> GetChatUsersAsync(Messenger.BLL.DTO.ChatDTO chat) {
            return base.Channel.GetChatUsersAsync(chat);
        }
        
        public void UpdateMessage(Messenger.BLL.DTO.MessageDTO msg) {
            base.Channel.UpdateMessage(msg);
        }
        
        public System.Threading.Tasks.Task UpdateMessageAsync(Messenger.BLL.DTO.MessageDTO msg) {
            return base.Channel.UpdateMessageAsync(msg);
        }
        
        public Messenger.BLL.DTO.UserDTO GetUser(int userId) {
            return base.Channel.GetUser(userId);
        }
        
        public System.Threading.Tasks.Task<Messenger.BLL.DTO.UserDTO> GetUserAsync(int userId) {
            return base.Channel.GetUserAsync(userId);
        }
        
        public System.Nullable<bool> Registration(Messenger.BLL.DTO.UserDTO user) {
            return base.Channel.Registration(user);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> RegistrationAsync(Messenger.BLL.DTO.UserDTO user) {
            return base.Channel.RegistrationAsync(user);
        }
        
        public Messenger.BLL.DTO.UserDTO AddContact(string contactEmail, Messenger.BLL.DTO.UserDTO user) {
            return base.Channel.AddContact(contactEmail, user);
        }
        
        public System.Threading.Tasks.Task<Messenger.BLL.DTO.UserDTO> AddContactAsync(string contactEmail, Messenger.BLL.DTO.UserDTO user) {
            return base.Channel.AddContactAsync(contactEmail, user);
        }
        
        public Messenger.BLL.DTO.ChatDTO CreateChat(Messenger.BLL.DTO.ChatDTO chat, System.Collections.Generic.List<Messenger.BLL.DTO.ChatUserDTO> chatUsers) {
            return base.Channel.CreateChat(chat, chatUsers);
        }
        
        public System.Threading.Tasks.Task<Messenger.BLL.DTO.ChatDTO> CreateChatAsync(Messenger.BLL.DTO.ChatDTO chat, System.Collections.Generic.List<Messenger.BLL.DTO.ChatUserDTO> chatUsers) {
            return base.Channel.CreateChatAsync(chat, chatUsers);
        }
    }
}
